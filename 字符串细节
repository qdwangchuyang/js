在JS中所有用单引号或者双引号包起来的都是字符串
每一个字符串都是由零到多个字符组成
var str='zhufengpeixun';
str.length
str[0]    是 z                  //字符串中每一个字符都有一个自己对应位置的索引，也有类似于数组一样的length代表自己的长度
str[100] 是  undefined
==============================================================
for(var i=0;i<str.length;i++){
console.log(str[i]);
}                              //  循环遍历字符串，输出每一项字符
===========================================================
关于字符串中常用的方法
注：字符串是基本数据类型，字符串每一次操作都是值直接进行操作，不像数组一样是基于空间地址来操作，所以不存在原有字符串改变，肯定是不变的。

1，charAt/chatCodeAt
2，indexOf/lastIndexOf
基于这两个方法，可以获取字符在字符串中第一次或者最后一次出现位置的索引，有这个字符，返回大于等于零的索引，
不包含这个字符，返回的结果是-1，所以可以基于这两个方法，验证当前字符串中是否包含某个字符
var str='zhufengpeixun';
if(str.indexOf('@')>-1{
  //条件成立说明包含字符@
}

3,slice
  作用：str.slice(n,m) 从索引n开始找到索引为m处（不包含m）；
      将找到的字符当做新字符串返回
      var str='zhufengpeixun';
      str.slice(2,7)                                    //和数组中的slice操作是一样的
      返回：“ufeng”                                       1，不写m，查找到字符串的末尾
      str.slice(2)                                        2，n/m都不写是字符串的克隆
      返回：“ufengpeixun”                                 3，支持负数索引：用字符串的总长度+负数索引做运算
     str.slice()
       返回："zhufengpeixun"
      str.slice(-3,-1)
       返回："xu"
       
       注：实际项目很少用
  =================================================================
   4，substring
   和slice语法一致，唯一区别：slice支持负数索引，substring不支持负数索引
   
   5，substr 
   语法：str.substr(n,m) 从索引n开始截取m个字符
   
   
   var str='zhufengpeixun'
   str.substr(2,7)  返回"ufengpe"
   str.substr(2)     返回"ufengpeixun"
   str.substr(-3,-1)  返回'x'
   str.substr(-6,-3)  返回‘pei’
   
   //和substring一样，第二个参数不传，截取到末尾；但是支持第一个索引为负数，负数也是总长度+负数索引
   
   =========================================================
   6,toUpperCase/toLowerCase
   实现字母的大小写转换，toUpperCase小写转大写，toLowerCase大写转小写
   
   var str="ZhuFengPeiXun"
   str.toLowerCase()  返回 'zhufengpeixun'
   str.toUpperCase()  返回'ZHUFENGPEIXUN'
   
   =============================================================
   7，split
   和数组中的join相对应，数组中的join是把数组们一项按照指定的连接符变为字符串；
   而split是把字符串按照指定的分隔符，拆分成数组中的每一项
   var ary=[12,23,34];
   ary.join('+')
   返回："12+23+34";
   str.split('+');
   ["12","23","34"]
   
   ================================================================
   8,replace
   作用：替换字符串中的原有字符
   参数：原有字符，要替换的新字符
   返回：替换后的新字符串
   
   var str='zhufeng2017zhufeng2018';
   str=str.replace('zhufeng','珠峰')；             //在不使用正则前提下，每执行一次，只能替换一个
   
   
   
   
   
   
   
   
   
   
   
   
